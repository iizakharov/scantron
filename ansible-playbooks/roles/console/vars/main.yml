---
enable_ufw_firewall: true
reboot_box: false

install_packages:
  - autossh
  - graphviz  # For django-extensions' graph_models.
  - libgraphviz-dev  # For django-extensions' graph_models.
  - nfs-kernel-server
  - nginx
  - nmap
  - postfix
  - postgresql-{{ postgresql_version }}
  - python3-pip
  - python3.8-dev
  - python3-venv
  - python3-virtualenv
  - python3-psycopg2  # python3-psycopg2 required for Ansible.
  - redis
  - xmlsec1  # SAML support.

pyhton_packages:
  - build-essential
  - checkinstall
  - libreadline-gplv2-dev
  - libncursesw5-dev
  - libssl-dev
  - libsqlite3-dev
  - tk-dev
  - libgdbm-dev
  - libc6-dev
  - libbz2-dev
  - libffi-dev
  - zlib1g-dev

# secrets file
scantron_secrets: "{{ lookup('file', '../../../console/scantron_secrets.json') | from_json }}"

# postgresql
postgresql_version: 12

postgresql_admin_user: postgres

# Host based authentication (hba) entries to be added to the pg_hba.conf. This
# variable's defaults reflect the defaults that come with a fresh installation.
postgresql_hba_entries:
  - { type: local, database: all, user: postgres, auth_method: peer }
  - { type: local, database: all, user: all, auth_method: peer }
  - { type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5 }
  - { type: host, database: all, user: all, address: '::1/128', auth_method: md5 }

# pip
scantron_dir: "/home/{{ non_root_user }}/console"
venv_dir: "{{ scantron_dir }}/.venv"
venv_python: "{{ venv_dir }}/bin/python3"

# Django
django_project_name: django_scantron

# uwsgi
uwsgi_version: 2.0.19.1

# postfix
postfix_hostname: scantron
postfix_inet_interfaces: 127.0.0.1
